[build-system]
build-backend = "hatchling.build"
requires = [
    "hatchling>=1.10",
]

[project]
name = "papis-uefiscdi"
version = "0.2.0"
description = "Some simple plugins for papis"
readme = "README.rst"
keywords = [
    "bibliography",
]
license = { text = "MIT" }
maintainers = [
    { name = "Alexandru Fikl", email = "alexfikl@gmail.com" },
]
authors = [
    { name = "Alexandru Fikl", email = "alexfikl@gmail.com" },
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Utilities",
]
dependencies = [
    "msoffcrypto-tool>=5",
    "openpyxl>=3.1",
    "platformdirs>=4",
    "pypdf>=5",
    "pyperclip>=1",
    "requests>=2.32",
    "rich>=13",
    "titlecase>=2.4",
]
optional-dependencies.dev = [
    "mypy",
    "pytest",
    "reuse",
    "ruff",
    "types-beautifulsoup4",
    "types-openpyxl",
    "types-pyyaml",
    "types-requests",
    "typos",
    "uv",
]
optional-dependencies.docs = [
    "sphinx",
    "sphinx-book-theme",
    "sphinx-click",
]
optional-dependencies.papis = [
    "papis>=0.14",
]
urls.Repository = "https://github.com/alexfikl/papis-uefiscdi"
entry-points."papis.command".uefiscdi = "papis_uefiscdi.command:cli"

[tool.hatch.build.targets.sdist]
exclude = [
    ".github",
    ".ci",
    "docs/_build",
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/papis_uefiscdi",
]

[tool.ruff]
target-version = "py38"
line-length = 88

preview = true
lint.select = [
    "A",   # flake8-builtins
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "E",   # flake8
    "F",   # flake8
    "FBT", # flake8-boolean-trap
    "G",   # flake8-logging-format
    "I",   # flake8-isort
    "ISC", # flake8-implicit-str-concat
    "N",   # pep8-naming
    "PL",  # pylint
    "Q",   # flake8-quotes
    "RUF", # ruff
    "S",   # flake8-bandit
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "W",   # flake8
]
lint.ignore = [
    "A005",    # shadowing-builtin-module
    "E402",    # module-import-not-at-top-of-file
    "FBT001",  # boolean
    "ISC001",  # single-line-implicit-string-concatenation
    "PLC0415", # import-outside-top-level
    "PLR0911", # too-many-return-statements
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0914", # too-many-locals
    "PLR0915", # too-many-statements
    "PLR0917", # too-many-positional
    "PLR2004", # magic-value-comparison
    "S101",    # assert
    "S102",    # exec-builtin
    "S311",
    "UP037",   # quoted-annotation
]
lint.flake8-quotes.docstring-quotes = "double"
lint.flake8-quotes.inline-quotes = "double"
lint.flake8-quotes.multiline-quotes = "double"
lint.isort.known-first-party = [
    "papis",
    "papis_uefiscdi",
]

[tool.pytest.ini_options]
testpaths = "test"
addopts = [
    "-rswx",
    "--durations=25",
    "--capture=no",
    "--verbose",
]

[tool.mypy]
strict = true
python_version = "3.10"
hide_error_codes = false
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "colorama.*",
    "pyperclip.*",
    "titlecase.*",
    "msoffcrypto.*",
]
ignore_missing_imports = true
